"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[4656],{444:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>r,contentTitle:()=>d,default:()=>c,frontMatter:()=>s,metadata:()=>i,toc:()=>l});var a=n(5893),o=n(1151);const s={id:"update",title:"Update",tags:["Update"]},d=void 0,i={id:"operations/update",title:"Update",description:"Update operations allow modifying fields and values of a single or multiple documents.",source:"@site/docs/operations/update.md",sourceDirName:"operations",slug:"/operations/update",permalink:"/mongo4cats/docs/operations/update",draft:!1,unlisted:!1,tags:[{label:"Update",permalink:"/mongo4cats/docs/tags/update"}],version:"current",frontMatter:{id:"update",title:"Update",tags:["Update"]},sidebar:"docsSidebar",previous:{title:"Find",permalink:"/mongo4cats/docs/operations/find"},next:{title:"Distinct",permalink:"/mongo4cats/docs/operations/distinct"}},r={},l=[];function p(e){const t={a:"a",code:"code",p:"p",pre:"pre",...(0,o.a)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsxs)(t.p,{children:["Update operations allow modifying fields and values of a single or multiple documents.\nWhen executed, the update operation will apply changes specified in an update query to all documents that match a filter query.\n",(0,a.jsx)(t.code,{children:"MongoCollection[F, T]"})," has several methods for submitting an update query: ",(0,a.jsx)(t.code,{children:"updateOne"})," updates the first document that matches a filter, whereas ",(0,a.jsx)(t.code,{children:"updateMany"})," will update all documents."]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-scala",children:'import mongo4cats.operations.{Filter, Update}\nimport mongo4cats.models.collection.UpdateOptions\n\n// chain multiple updates together\nval update = Update.set("field1", "foo").currentDate("date")\n\nval result: IO[UpdateResult] = collection.updateOne(Filter.empty, update)\n// or with options\nval result: IO[UpdateResult] = collection.updateOne(Filter.empty, update, UpdateOptions().upsert(true))\n'})}),"\n",(0,a.jsxs)(t.p,{children:["As an alternative, an update query can be built using ",(0,a.jsx)(t.a,{href:"https://docs.mongodb.com/drivers/java/sync/current/fundamentals/builders/updates/",children:"builder"})," from the standard MongoDB library:"]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-scala",children:'import com.mongodb.client.model.{Filters, Updates}\n\nval update = Updates.combine(Updates.set("field1", "foo"), Updates.currentDate("date"))\nval result: IO[UpdateResult] = collection.updateOne(Filters.empty(), update)\n'})})]})}function c(e={}){const{wrapper:t}={...(0,o.a)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(p,{...e})}):p(e)}},1151:(e,t,n)=>{n.d(t,{Z:()=>i,a:()=>d});var a=n(7294);const o={},s=a.createContext(o);function d(e){const t=a.useContext(s);return a.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:d(e.components),a.createElement(s.Provider,{value:t},e.children)}}}]);